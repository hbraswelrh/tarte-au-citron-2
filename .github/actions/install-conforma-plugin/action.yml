name: "install-opa-plugin"
description: "Install C2P OPA Plugin"

inputs:
  version:
    description: 'Version of the plugin to install. Defaults to latest.'
    required: false
    default: 'latest'

runs:
  using: "composite"
  steps:
    - name: Set up Go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version: '1.24'
        cache: false
        check-latest: true

    - name: Build
      env:
        VERSION: ${{ inputs.version }}
      run: go install "github.com/complytime/compliance-to-policy-plugins/opa-plugin@$VERSION"
      shell: bash

    - name: Add to path
      run: echo $(go env GOPATH)/bin >> $GITHUB_PATH
      shell: bash

    - name: Generate manifest
      run: |
        checksum=$(sha256sum "$(go env GOPATH)/bin/opa-plugin" | cut -d ' ' -f 1 )
        cat >  "$(go env GOPATH)/bin/c2p-conforma-manifest.json" << EOF
        {
          "metadata": {
            "id": "conforma",
            "description": "Conforma PVP Plugin",
            "version": "0.0.1",
            "types": [
              "pvp"
            ]
          },
          "executablePath": "opa-plugin",
          "sha256": "$checksum",
          "configuration": [
              {
                "name": "policy-results",
                "description": "A directory where OPA results are located.",
                "required": true
              },
              {
                "name": "bundle-location",
                "description": "A location for the bundle with OPA policies.",
                "required": false
              },
              {
                "name": "conforma-policy-path",
                "description": "A path to write the policy.yaml",
                "required": false,
                "default": "."
              },
              {
                "name": "bundle",
                "description": "A location for an opa policy bundle. If unset, no bundle is created.",
                "required": false
              },
              {
                "name": "bundle-revision",
                "description": "A bundle revision if a bundle is created.",
                "required": false,
                "default": "1.0"
              },
              {
                "name": "policy-templates",
                "description": "A directory where Rego policies are located.",
                "required": false
              },
              {
                "name": "policy-output",
                "description": "A directory to write OPA configuration data in JSON for checks.",
                "required": false
              }
          ]
        }
        EOF
      shell: bash
