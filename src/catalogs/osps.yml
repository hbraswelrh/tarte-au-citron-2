# An adapted copy of the OSPS-QA.yaml for demo - https://github.com/ossf/security-baseline/blob/main/baseline/OSPS-QA.yaml
metadata:
  id: OSPS-B
  title: Open Source Project Security Baseline
  description: |
    The Open Source Project Security (OSPS) Baseline is a set of security
    criteria that projects should meet to demonstrate a strong security posture.
  applicability-categories:
    - id: Maturity1
      title: Maturity Level 1
      description: |
        Any code or non-code project with any number of maintainers or users
    - id: Maturity2
      title: Maturity Level 2
      description: |
        Any code project that has at least 2 maintainers and a small number of
        consistent users
    - id: Maturity3
      title: Maturity Level 3
      description: |
        Any code project that has a large number of consistent users
  mapping-references:
    - id: 800-161
      title: Cybersecurity Supply Chain Risk Management Practices for Systems and Organizations
      version: "1.1"
      url: https://csrc.nist.gov/pubs/sp/800/161/r1/upd1/final
    - id: SSDF
      title: NIST Secure Software Development Framework (SP 800-218)
      version: "1.1"
      url: https://csrc.nist.gov/pubs/sp/800/218/final
      description: |
        The Secure Software Development Framework (SSDF) is a set of fundamental,
        sound, and secure software development practices based on established
        secure software development practice documents from organizations such as
        BSA, OWASP, and SAFECode. Few software development life cycle (SDLC) models
        explicitly address software security in detail, so practices like those in
        the SSDF need to be added to and integrated with each SDLC implementation.
        Following the SSDF practices should help software producers reduce the
        number of vulnerabilities in released software, reduce the potential impact
        of the exploitation of undetected or unaddressed vulnerabilities, and
        address the root causes of vulnerabilities to prevent recurrences. Also,
        because the SSDF provides a common language for describing secure software
        development practices, software producers and acquirers can use it to foster
        their communications for procurement processes and other management activities.
control-families:
  - title: Quality
    description: |
      Quality focuses on the processes and
      practices used to ensure the quality and
      reliability of the project's source code and
      software assets. These controls help ensure
      that the project's source code is well
      maintained, secure, and reliable, reducing the
      risk of defects or vulnerabilities in the
      software.
    controls:
      - id: OSPS-QA-07
        title: |
          The project's version control system MUST require at least one
          non-author approval of changes to the primary branch.
        objective: |
          Ensure that the project's version control system requires at least one
          non-author approval of changes before merging into the release or primary
          branch.
        guideline-mappings:
          - reference-id: BPB
            entries:
              - reference-id: B-G-3
          - reference-id: Scorecard
            entries:
              - reference-id:  Code-Review
          - reference-id: PSSCRM
            entries:
              - reference-id: G2.4
              - reference-id: P3.3
              - reference-id: P3.5
          - reference-id: PCIDSS
            entries:
              - reference-id: 6.2.3.1
              - reference-id: 6.4.2
              - reference-id: 6.5.4
          - reference-id: 800-161
            entries:
              - reference-id: AC-5
              - reference-id: AU-6
              - reference-id: PL-8
              - reference-id: SA-15
              - reference-id: SR-3
          # Adding a non-existing mapping for testing
          - reference-id: SSDF
            entries:
              - reference-id: PS1
        assessment-requirements:
          - id: OSPS-QA-07.01
            text: |
              When a commit is made to the primary branch, the project's version
              control system MUST require at least one non-author approval of the
              changes before merging.
            applicability:
              - Maturity Level 3
            recommendation: |
              Configure the project's version control system to require at least one
              non-author approval of changes before merging into the release or
              primary branch. This can be achieved by requiring a pull request to be
              reviewed and approved by at least one other contributor before it can
              be merged.
            # Note: this below section has been added for testing purposes
            recommended-parameters:
              - id: main_branch_min_approvals
                description: Minimum approvals on the default branch
                default: 1
